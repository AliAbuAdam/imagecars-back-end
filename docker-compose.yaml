version: '3.5'

services:
  auth:
    container_name: auth
    build: ./auth
    depends_on:
      - db_auth
    networks:
      - server_net
    environment:
      PORT: ${auth_port}
      SECRET_KEY: ${secret_key}
      DB_HOST_ADDRESS: db_auth
      DB_PORT: ${db_port_auth}
      DB_USERNAME: ${db_user_auth}
      DB_PASSWORD: ${db_password_auth}
      DB_SSL: ${db_use_ssl}
      DB_SECRET_KEY: ${db_secret_key_auth}
      ACCESS_TOKEN_TIME: 100
      REFRESH_TOKEN_TIME: 200
      TZ: ${container_timezone}

  db_auth:
    container_name: db_auth
    ports:
      - ${db_port_auth}:${db_port_auth}
    environment:
      POSTGRES_USER: ${db_user_auth}
      POSTGRES_PASSWORD: ${db_password_auth}
      TZ: ${container_timezone}
    image: postgres:15-alpine
    command:
      - 'postgres'
      - '-c'
      - 'port=${db_port_auth}'
    volumes:
      - db_auth_vol:/var/lib/postgresql/data
    networks:
      - server_net


  progress_manager:
    container_name: progress_manager
    build: ./progress_manager
    depends_on:
      - db_progress_manager
    networks:
      - server_net
    environment:
      PORT: ${progress_manager_port}
      SECRET_KEY: ${secret_key}
      DB_HOST_ADDRESS: db_progress_manager
      DB_PORT: ${db_port_progress_manager}
      DB_USERNAME: ${db_user_progress_manager}
      DB_PASSWORD: ${db_password_progress_manager}
      DB_SSL: ${db_use_ssl}
      SERVICES_PORT: ${services_port}
      TZ: ${container_timezone}
  
  db_progress_manager:
    container_name: db_progress_manager
    ports:
      - ${db_port_progress_manager}:${db_port_progress_manager}
    environment:
      POSTGRES_USER: ${db_user_progress_manager}
      POSTGRES_PASSWORD: ${db_password_progress_manager}
      TZ: ${container_timezone}
    image: postgres:15-alpine
    command:
      - 'postgres'
      - '-c'
      - 'port=${db_port_progress_manager}'
    volumes:
      - db_progress_manager_vol:/var/lib/postgresql/data
    networks:
      - server_net


  services:
    container_name: services
    build: ./services
    depends_on:
      - db_services
    networks:
      - server_net
    environment:
      PORT: ${services_port}
      SECRET_KEY: ${secret_key}
      DB_HOST_ADDRESS: db_services
      DB_PORT: ${db_port_services}
      DB_USERNAME: ${db_user_services}
      DB_PASSWORD: ${db_password_services}
      DB_SSL: ${db_use_ssl}
      AUTH_PORT: ${auth_port}
      TZ: ${container_timezone}

  db_services:
    container_name: db_services
    ports:
      - ${db_port_services}:${db_port_services}
    environment:
      POSTGRES_USER: ${db_user_services}
      POSTGRES_PASSWORD: ${db_password_services}
      TZ: ${container_timezone}
    image: postgres:15-alpine
    command:
      - 'postgres'
      - '-c'
      - 'port=${db_port_services}'
    volumes:
      - db_services_vol:/var/lib/postgresql/data
    networks:
      - server_net

  envoy:
    container_name: envoy
    ports:
      - 8500:8500
    depends_on:
      - auth
      - services
      - progress_manager
    networks:
      - server_net
    build: ./envoy
    volumes:
      - /etc/envoy/letsencrypt:/etc/envoy/letsencrypt:ro


volumes:
  db_auth_vol: {}
  db_services_vol: {}
  db_progress_manager_vol: {}
networks:
  server_net:
    driver: bridge
